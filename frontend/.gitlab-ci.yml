---
stages:
  - test
  - build
  - package
  - deploy
  #- analysis

default:
  image: docker.io/node:14.16.1-alpine3.13
  #before_script:
    #- npm ci --cache .npm --prefer-offline
  cache:
    key:
      files:
        - package-lock.json
    paths:
      - .npm

# Use branch pipelines template
workflow:
  rules:
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_BRANCH

include:
  - local: .gitlab/ci/package.gitlab-ci.yml

test:
  stage: test
  rules:
    - allow_failure: true
  script:
    - npm run test:unit --
      --ci
      --coverage
      --reporters=default
      --reporters=jest-junit
      --reporters=jest-sonar
  artifacts:
    paths:
      - coverage
    reports:
      junit: junit.xml
    when: always

lint:
  stage: test
  rules:
    - allow_failure: true
  script:
    - npm run lint

build:
  stage: build
  #rules:
   # - if: '$CI_COMMIT_BRANCH == "develop" && $CI_PROJECT_NAMESPACE == "bapenda"'
  script:
    - npm install --progress=false
    - cp $DEVELOPMENT_ENV_FILE .env
    - npm run build
  after_script:
    - rm .env
  artifacts:
    name: "bapenda-pkb-bbnkb-frontend-${CI_COMMIT_SHORT_SHA}-${CI_COMMIT_BRANCH}"
    paths:
      - dist/

package-image:development:
  extends: .base-package-image
  dependencies:
    - build
  variables:
    PACKAGE_BRANCH: develop

deploy:development:
  stage: deploy
  image: docker.io/alpine:3.13.2
  variables:
    # Required environment file: $DEVELOPMENT_DOCKER_COMPOSE_OVERRIDE_FILE
    PRIVATE_KEY: $DEVELOPMENT_PRIVATE_KEY
    DEPLOY_USER: $DEVELOPMENT_DEPLOY_USER
    DEPLOY_HOST: $DEVELOPMENT_DEPLOY_HOST
  rules:
    - if: '$CI_COMMIT_BRANCH == "develop" && $CI_PROJECT_NAMESPACE == "bapenda"'
  before_script:
    - apk update && apk add --no-cache openssh-client rsync
    - mkdir -p ~/.ssh && chmod 700 ~/.ssh
    - printf "$PRIVATE_KEY" > ~/.ssh/private_key
    - chmod 600 ~/.ssh/private_key
    - eval $(ssh-agent) && ssh-add ~/.ssh/private_key
    - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
    - cp $DEVELOPMENT_DOCKER_COMPOSE_OVERRIDE_FILE deploy/docker-compose.override.yml
  script:
    - rsync -rah ./deploy/ "${DEPLOY_USER}@${DEPLOY_HOST}":"~/stacks/bapenda-pkb-bbnkb-frontend/"
    - ssh "${DEPLOY_USER}@${DEPLOY_HOST}"
      "cd ~/stacks/bapenda-pkb-bbnkb-frontend && sudo chmod +x manage.sh && sudo FRONTEND_IMAGE_TAG=develop ./manage.sh -u && sudo FRONTEND_IMAGE_TAG=develop ./manage.sh -p"
  after_script:
    - rm deploy/docker-compose.override.yml
    - rm ~/.ssh/private_key
  environment:
    name: development
    url: https://bapenda-pkb.pusilkom.com
  cache: {}
  dependencies: []

