---
stages:
  - package
  - deploy

default:
  image: registry.pusilkom.com/golang-orainstantclient:latest
  #before_script:
    #- npm ci --cache .npm --prefer-offline
  #cache:
  #  key:
  #   files:
  #      - package-lock.json
  #  paths:
  #    - .npm

# Use branch pipelines template
workflow:
  rules:
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_BRANCH

include:
  - local: .gitlab/ci/package.gitlab-ci.yml

package-image:development:
  extends: .base-package-image
  variables:
    PACKAGE_BRANCH: develop

deploy:development:
  stage: deploy
  image: docker.io/alpine:3.13.2
  variables:
    # Required environment file: $DEVELOPMENT_DOCKER_COMPOSE_OVERRIDE_FILE
    PRIVATE_KEY: $DEVELOPMENT_PRIVATE_KEY
    DEPLOY_USER: $DEVELOPMENT_DEPLOY_USER
    DEPLOY_HOST: $DEVELOPMENT_DEPLOY_HOST
  before_script:
    - apk update && apk add --no-cache openssh-client rsync
    - mkdir -p ~/.ssh && chmod 700 ~/.ssh
    - printf "$PRIVATE_KEY" > ~/.ssh/private_key
    - chmod 600 ~/.ssh/private_key
    - eval $(ssh-agent) && ssh-add ~/.ssh/private_key
    - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
    #- cp $DEVELOPMENT_DOCKER_COMPOSE_OVERRIDE_FILE deploy/docker-compose.override.yml
  script:
    - rsync -rah ./deploy/ "${DEPLOY_USER}@${DEPLOY_HOST}":"~/stacks/poc-go-language/"
    - ssh "${DEPLOY_USER}@${DEPLOY_HOST}"
      "cd ~/stacks/poc-go-language/ && chmod +x manage.sh && BACKEND_IMAGE_TAG=develop ./manage.sh -u && BACKEND_IMAGE_TAG=develop ./manage.sh -p"
  after_script:
    #- rm deploy/docker-compose.override.yml
    - rm ~/.ssh/private_key
  cache: {}
  dependencies: []

